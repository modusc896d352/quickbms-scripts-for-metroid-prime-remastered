# Donkey Kong Country: Tropical Freeze (Wii U, Switch) - "RFRM" files
# Metroid Prime Remastered (Switch) - "RFRM" files
# ---
# MaterialArchive.arc (that one file present in all Retro Studios' games starting with Tropical Freeze) isn't fully supported yet.
# ---
# (todo) port all of this to C++

get pak_name1 filename
get pak_name2 basename

set target_fourcc string ""

math pos1 = 0
math rfrm_pos = 0
math temp_pos = 0
math pack_pos = 0
math tocc_pos = 0
math adir_pos = 0
math meta_pos1 = 0
math meta_pos2 = 0
math strg_pos = 0
/*
math sdx_pos = 0
*/

math is_pack = 0
math is_tocc = 0
math is_adir = 0
math is_meta = 0
math is_strg = 0
/*
math is_mtrl = 0
math is_sdx = 0
*/
math done = 1

math pack_endian_flag = 0
math tocc_ver = 0
math fourcc_in_reverse = 0

math adir_entries = 0
math meta_entries = 0
math strg_entries = 0

goto 0
getdstring is_rfrm 4
if is_rfrm != "RFRM"
	print " not an RFRM file. "
	cleanexit
endif

goto pos1
math rfrm_pos = pos1
callfunction parse_rfrm 1
if is_pack == 1
	callfunction parse_rfrm 1
endif

if is_pack == 1
if is_tocc == 1
	for wip2 = 0 < done
		callfunction parse_tocc 1
	next wip2
endif
endif

if is_pack != 1
	print " PACK chunk - not present "
else
	print " PACK chunk - present "
endif
if is_tocc != 1
	print " TOCC chunk - not present "
else
	print " TOCC chunk - present "
endif
if is_adir != 1
	print " ADIR chunk - not present "
else
	print " ADIR chunk - present "
endif
if is_meta != 1
	print " META chunk - not present "
else
	print " META chunk - present "
endif
if is_strg != 1
	print " STRG chunk - not present "
else
	print " STRG chunk - present "
endif

if is_pack == 1
if is_tocc == 1
	if is_adir == 1
		for adir_i = 0 < adir_entries
			goto adir_pos
			callfunction read_fourcc 1
			callfunction get_guid_from_tocc_chunks 1
			math adir_pos + 20
			if tocc_ver == 1
				get entry_offset longlong
				get entry_size longlong
				math adir_pos + 16
			elif tocc_ver == 3
				get entry_properties1 long
				get entry_properties2 long
				get entry_offset longlong
				get decompressed_entry_size longlong
				get entry_size longlong
				math adir_pos + 32
			endif
			set adir_warning1 string ""
			set adir_warning2 string ""
			set temp_name1 string ""
			set temp_name2 string ""
			string temp_name1 p "%s/%s" target_fourcc entry_signature_in_full
			if tocc_ver == 1
				set temp_name2 string temp_name1
			elif tocc_ver == 3
				if decompressed_entry_size != entry_size
					string adir_warning1 p " ADIR entry %d is compressed. " adir_i
					print "%adir_warning1%"
					string adir_warning2 p " i cannot figure it out what that is ATM as details around this one are still hazy here, but don't count on me for that. "
					print "%adir_warning2%"
					string temp_name2 p "%s.compressed" temp_name1
				else
					set temp_name2 string temp_name1
				endif
			endif
			log temp_name2 entry_offset entry_size
		next adir_i
	endif
	/*
	if is_adir == 1
		for adir_i = 0 < adir_entries
			goto adir_pos
			callfunction read_fourcc 1
			callfunction get_guid_from_tocc_chunks 1
			math adir_pos + 20
			if tocc_ver == 1
				get entry_offset longlong
				get entry_size longlong
				math adir_pos + 16
			elif tocc_ver == 3
				get entry_properties1 long
				get entry_properties2 long
				get entry_offset longlong
				get decompressed_entry_size longlong
				get entry_size longlong
				math adir_pos + 32
			endif
		next adir_i
	endif
	if is_meta == 1
		for meta_i = 0 < meta_entries
			goto meta_pos1
			callfunction get_guid_from_tocc_chunks 1
			get entry_metadata_address long
			math entry_metadata_address + meta_pos2
			goto entry_metadata_address
			get entry_metadata_size long
			getdstring entry_metadata entry_metadata_size
			math meta_pos1 + 20
		next meta_i
	endif
	if is_strg == 1
		for strg_i = 0 < strg_entries
			goto strg_pos
			if pack_endian_flag == 1
				math fourcc_in_reverse = 1
			endif
			callfunction read_fourcc 1
			callfunction get_guid_from_tocc_chunks 1
			math strg_pos + 20
			get entry_string_size long
			if entry_string_size < 0x100
				getdstring entry_string entry_string_size
				math strg_pos + 4
				math strg_pos + entry_string_size
			else
				goto strg_pos
				get entry_string string
				savepos strg_pos
			endif
		next strg_i
	endif
	*/
endif
endif


startfunction parse_rfrm
	goto rfrm_pos
	callfunction read_fourcc 1
	if target_fourcc == "RFRM"
		if rfrm_pos == 0
			math temp_pos = rfrm_pos
			math temp_pos + 4
			goto temp_pos
			get endian_check1 long
			get endian_check2 long
			if endian_check1 == 0
				endian big
			else
				# just in case we see an RFRM file going over 4GB in size...
				endian little
			endif
			if endian_check2 == 0
				endian little
			else
				# just in case we see an RFRM file going over 4GB in size...
				endian big
			endif
			math rfrm_pos = temp_pos
			goto rfrm_pos
			math rfrm_pos - 4
		endif
		get rfrm_size longlong
		if target_fourcc == ""
			if rfrm_size == 0
				cleanexit
			endif
		endif
		get rfrm_info1 longlong
		math rfrm_pos + 20
		goto rfrm_pos
		callfunction read_fourcc 1
		get rfrm_info2 long
		get rfrm_info3 long
		math rfrm_pos + 12
		if rfrm_info2 == rfrm_info3
			if target_fourcc == "PACK"
				xmath pack_endian_flag "rfrm_info2 & 1"
				if pack_endian_flag == 1
					endian little
				elif pack_endian_flag == 0
					endian big
				endif
				math is_pack = 1
				math pack_pos = rfrm_pos
			elif target_fourcc == "TOCC"
				math tocc_ver = rfrm_info2
				math is_tocc = 1
				math tocc_pos = rfrm_pos
			endif
		endif
		#math rfrm_pos + rfrm_size
	endif
endfunction

startfunction parse_tocc
	goto tocc_pos
	callfunction read_fourcc 1
	get tocc_csz longlong
	get tocc_info2 long
	if tocc_info2 != 1
		break
	endif
	get tocc_info3 longlong
	math tocc_pos + 24
	get tocc_info4 long
	if target_fourcc == "ADIR"
		if is_pack != 1
			cleanexit
		endif
		if is_tocc != 1
			cleanexit
		endif
		math is_adir = 1
		math done + 1
		math adir_entries = tocc_info4
		math adir_pos = tocc_pos
		math adir_pos + 4
	elif target_fourcc == "META"
		if is_pack != 1
			cleanexit
		endif
		if is_tocc != 1
			cleanexit
		endif
		if is_adir != 1
			cleanexit
		endif
		math is_meta = 1
		math done + 1
		math meta_entries = tocc_info4
		math meta_pos1 = tocc_pos
		math meta_pos1 + 4
		math meta_pos2 = tocc_pos
	elif target_fourcc == "STRG"
		if is_pack != 1
			cleanexit
		endif
		if is_tocc != 1
			cleanexit
		endif
		if is_adir != 1
			cleanexit
		endif
		math is_strg = 1
		math done + 1
		math strg_entries = tocc_info4
		math strg_pos = tocc_pos
		math strg_pos + 4
	endif
	math tocc_pos + tocc_csz
endfunction

startfunction read_fourcc
	getdstring target_fourcc 4
	if fourcc_in_reverse != 0
		string target_fourcc r target_fourcc
	endif
endfunction

startfunction get_guid_from_tocc_chunks
	set entry_signature_in_full string ""
	getdstring entry_signature1 4
	if pack_endian_flag != 1
		string entry_signature1 0b entry_signature1
	else
		string entry_signature1 0r entry_signature1
		string entry_signature1 0b entry_signature1
	endif
	getdstring entry_signature2 2
	if pack_endian_flag != 1
		string entry_signature2 0b entry_signature2
	else
		string entry_signature2 0r entry_signature2
		string entry_signature2 0b entry_signature2
	endif
	getdstring entry_signature3 2
	if pack_endian_flag != 1
		string entry_signature3 0b entry_signature3
	else
		string entry_signature3 0r entry_signature3
		string entry_signature3 0b entry_signature3
	endif
	getdstring entry_signature4 8
	string entry_signature4 0b entry_signature4
	string entry_signature_in_full p "%s-%s-%s-%s" entry_signature1 entry_signature2 entry_signature3 entry_signature4
endfunction
